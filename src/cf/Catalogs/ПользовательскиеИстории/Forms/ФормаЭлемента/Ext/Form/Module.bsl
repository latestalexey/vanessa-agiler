
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьПодсказку();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПодсказку()
	ШаблонHTML =
	"<html>
	|<head>
	|  <style>
	|   p {
	|    font-family: 'Courier New'; 
	|    font-size: 12pt;
	|   }
	|  </style>
	| </head>	
	|<body>
	|<p>#Текст</p>
	|</body>
	|</html>";
	
	Текст = "Чтобы добиться цели #Цель, #Персона будет #ВыполнятьКлючевоеДействие и для этого он(она) хочет #НеобходимаяФункциональность";
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		Текст = СтрЗаменить(Текст, "#Цель", "<strong>" + Объект.Владелец + "</strong>");		
	Иначе
		Текст = СтрЗаменить(Текст, "#Цель", "<strong>?</strong>");		
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Персона) Тогда
		Текст = СтрЗаменить(Текст, "#Персона", "<strong>" + Объект.Персона + "</strong>");		
	Иначе
		Текст = СтрЗаменить(Текст, "#Персона", "<strong>Персона</strong>");		
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.КлючевоеДействие) Тогда
		Текст = СтрЗаменить(Текст, "#ВыполнятьКлючевоеДействие", "<strong>" + Объект.КлючевоеДействие + "</strong>");		
	Иначе
		Текст = СтрЗаменить(Текст, "#ВыполнятьКлючевоеДействие", "<strong>выполнять ключевое действие</strong>");		
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.НеобходимаяФункциональность) Тогда
		Текст = СтрЗаменить(Текст, "#НеобходимаяФункциональность", "<strong>" + Объект.НеобходимаяФункциональность + "</strong>");		
	Иначе
		Текст = СтрЗаменить(Текст, "#НеобходимаяФункциональность", "<strong>необходимая функциональность</strong>");		
	КонецЕсли;
	
	Текст = СтрЗаменить(ШаблонHTML, "#Текст", Текст);
	
	Подсказка = Текст;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовокФункционала(Автоматически = Ложь)
	Если Автоматически Тогда
		Объект.Заголовок = "[" + Объект.НеобходимаяФункциональность + "] " + Объект.КлючевоеДействие;
		
	Иначе
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПодвердитьАвтоопределениеЗаголовкаЗавершение", ЭтотОбъект), 
			"Взять в качестве заголовка определение необходимой функциональности?", 
			РежимДиалогаВопрос.ДаНет
		);	
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодвердитьАвтоопределениеЗаголовкаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.Заголовок = Объект.НеобходимаяФункциональность;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПерсонаПриИзменении(Элемент)
	ОбновитьПодсказку();
КонецПроцедуры

&НаКлиенте
Процедура КлючевоеДействиеПриИзменении(Элемент)
	ОбновитьПодсказку();
КонецПроцедуры

&НаКлиенте
Процедура НеобходимаяФункциональностьПриИзменении(Элемент)
	ОбновитьПодсказку();
	ОбновитьЗаголовокФункционала(Истина);	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаименованиеИзНеобходимогоФункционала(Команда)
	ОбновитьЗаголовокФункционала();	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФичеОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ОткрытьФичуЗавершение", ЭтотОбъект), Объект.ПутьКФиче);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФичуЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Feature открыта во внешней программе.";
	Сообщение.Сообщить();	
КонецПроцедуры

&НаСервере
Функция НайтиИдентичнуюПользовательскуюИсторию()
	Результат = Новый Структура;
	
	Результат.Вставить("Нашли", Истина);
	Результат.Вставить("НайденнаяПользовательскаяИстория", "");
	Результат.Вставить("Представление", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПользовательскиеИстории.Ссылка,
	|	ПользовательскиеИстории.Представление КАК Представление
	|ИЗ
	|	Справочник.ПользовательскиеИстории КАК ПользовательскиеИстории
	|ГДЕ
	|	ПользовательскиеИстории.Персона = &Персона
	|	И ПользовательскиеИстории.КлючевоеДействие = &КлючевоеДействие
	|	И ПользовательскиеИстории.НеобходимаяФункциональность = &НеобходимаяФункциональность";
	
	Запрос.УстановитьПараметр("Персона", Объект.Персона);
	Запрос.УстановитьПараметр("КлючевоеДействие", Объект.КлючевоеДействие);
	Запрос.УстановитьПараметр("НеобходимаяФункциональность", Объект.НеобходимаяФункциональность);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Результат.Нашли = Ложь;	
		
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();

		Результат.НайденнаяПользовательскаяИстория = ПолучитьНавигационнуюСсылку(ВыборкаДетальныеЗаписи.Ссылка);
		Результат.Представление = ВыборкаДетальныеЗаписи.Представление;
	КонецЕсли;

	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	РезультатПоиска = НайтиИдентичнуюПользовательскуюИсторию();
	Если РезультатПоиска.Нашли Тогда
		Отказ = Истина;
		
		ПоказатьОповещениеПользователя("Найдена идентичная пользовательская история! Запись прервана", РезультатПоиска.НайденнаяПользовательскаяИстория, РезультатПоиска.Представление, БиблиотекаКартинок.Остановить, СтатусОповещенияПользователя.Важное);	
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОповеститьОВыборе(Объект.Ссылка);
КонецПроцедуры

