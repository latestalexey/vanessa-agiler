
&НаКлиенте
Перем ЭлементыИСлои;

&НаКлиенте
Перем Разделитель;

&НаКлиенте
Процедура ОпределитьСлой()
	Для Каждого Пара Из ЭлементыИСлои Цикл
		Пара.Значение.Видимость = Пара.Ключ = Объект.ЭлементПроцесса;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("УстановитьКурсорНаНовыйЭлементПроцесса", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УказатьСоответствиеСлоевИЭлементов();
	ОпределитьСлой();
	
	ОбновитьHTMLПредставление();
КонецПроцедуры

&НаКлиенте
Процедура УказатьСоответствиеСлоевИЭлементов()
	ЭлементыИСлои = Новый Соответствие;
	
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.Старт"), Элементы.Слой_Старт);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.Завершение"), Элементы.Слой_Завершение);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.ПользовательскаяИстория"), Элементы.Слой_ПользовательскаяИстория);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.Условие"), Элементы.Слой_Условие);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.ВариантУсловия"), Элементы.Слой_ВариантУсловия);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.ВложенныйПроцесс"), Элементы.Слой_ВложенныйПроцесс);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.Комментарий"), Элементы.Слой_Комментарий);
КонецПроцедуры

&НаКлиенте
Процедура ЭлементПроцессаПриИзменении(Элемент)
	ОпределитьСлой();
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьИзПользовательскойИстории(Команда)
	Если Не ЗначениеЗаполнено(Объект.ПользовательскаяИстория) Тогда
		Возврат;		
	КонецЕсли;

	ЗаполнитьИзПользовательскойИсторииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзПользовательскойИсторииНаСервере()
	ОбъектНаСервере = РеквизитФормыВЗначение("Объект");
	
	ЗаполнитьЗначенияСвойств(ОбъектНаСервере, Объект.ПользовательскаяИстория, "Персона,КлючевоеДействие");
	
	ЗначениеВРеквизитФормы(ОбъектНаСервере, "Объект");
КонецПроцедуры


&НаКлиенте
Процедура ПользовательскаяИсторияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОтборФормы = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Персона) Тогда
		ОтборФормы.Вставить("Персона", Объект.Персона);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.КлючевоеДействие) Тогда
		ОтборФормы.Вставить("КлючевоеДействие", Объект.КлючевоеДействие);
	КонецЕсли;
	
	Если ОтборФормы.Количество() > 0 Тогда
		ПараметрыФормы = Новый Структура;
		
		ПараметрыФормы.Вставить("Отбор", ОтборФормы);
		
		ОткрытьФорму("Справочник.ПользовательскиеИстории.Форма.ФормаВыбора", ПараметрыФормы, Элементы.ПользовательскаяИстория);
		
	Иначе		
		ОткрытьФорму("Справочник.ПользовательскиеИстории.Форма.ФормаВыбора",, Элементы.ПользовательскаяИстория);
		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПользовательскаяИсторияОткрытие(Элемент, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.ПользовательскаяИстория) Тогда
		Возврат;		
	КонецЕсли;

	Если Истина
		И Не ЗначениеЗаполнено(Объект.Персона)
		И Не ЗначениеЗаполнено(Объект.КлючевоеДействие)
		Тогда
		
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияФормы = Новый Структура;
	
	ЗначенияЗаполненияФормы.Вставить("Персона", Объект.Персона);
	ЗначенияЗаполненияФормы.Вставить("КлючевоеДействие", Объект.КлючевоеДействие);
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполненияФормы);
	
	ОткрытьФорму("Справочник.ПользовательскиеИстории.Форма.ФормаЭлемента", ПараметрыФормы, Элементы.ПользовательскаяИстория);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьБизнесЦель(ТекущийЭлемент, Результат = Неопределено)
	Если ТекущийЭлемент.ЭлементПроцесса = Перечисления.ЭлементыПроцесса.Старт Тогда
		Результат = ТекущийЭлемент.БизнесЦель;
		
	Иначе
		ПолучитьБизнесЦель(ТекущийЭлемент.Родитель, Результат);
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ОбновитьHTMLПредставление()
	Разделитель = "URL";
	
	ШаблонHTML =
	"<html>
	|<head>
	|  <style>
	|   p {
	|    font-family: 'Courier New'; 
	|    font-size: 12pt;
	|   }
	|  </style>
	| </head>	
	|<body>
	|<p>#Текст</p>
	|</body>                                                      
	|</html>";
	
	Текст = "<a href=""ПерсонаСсылка"">ПерсонаПредставление</a> будет <a href=""КлючевоеДействиеСсылка"">КлючевоеДействиеПредставление</a>";
	
	Текст = СтрЗаменить(Текст, "ПерсонаСсылка", "Персоны" + Разделитель + Объект.Персона.УникальныйИдентификатор());		
	Если ЗначениеЗаполнено(Объект.Персона) Тогда
		Текст = СтрЗаменить(Текст, "ПерсонаПредставление", Объект.Персона);		
	Иначе
		Текст = СтрЗаменить(Текст, "ПерсонаПредставление", "персона");		
	КонецЕсли;
	
	Текст = СтрЗаменить(Текст, "КлючевоеДействиеСсылка", "КлючевыеДействия" + Разделитель + Объект.КлючевоеДействие.УникальныйИдентификатор());		
	Если ЗначениеЗаполнено(Объект.КлючевоеДействие) Тогда
		Текст = СтрЗаменить(Текст, "КлючевоеДействиеПредставление", Объект.КлючевоеДействие);		
	Иначе
		Текст = СтрЗаменить(Текст, "КлючевоеДействиеПредставление", "выполнять ключевое действие");		
	КонецЕсли;
	
	Текст = СтрЗаменить(ШаблонHTML, "#Текст", Текст);
	
	HTMLПредставление = Текст;
КонецПроцедуры

&НаКлиенте
Процедура HTMLПредставлениеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если Не ДанныеСобытия.Element.nodeName = "A" Тогда
		Возврат;	
	КонецЕсли;

	ДанныеСправочника = ПолучитьДанныеСправочника(ДанныеСобытия.Element.nameProp);
	Если ДанныеСправочника.УИНСтрокой = "00000000-0000-0000-0000-000000000000" Тогда
		ОткрытьФорму("Справочник." + ДанныеСправочника.ИмяСправочника + ".Форма.ФормаВыбора",, ЭтаФорма);
	Иначе
		ПараметрыФормы = Новый Структура;

		ПараметрыФормы.Вставить("ТекущаяСтрока", ПолучитьСсылкуНаСправочник(ДанныеСправочника));
		
		ОткрытьФорму("Справочник." + ДанныеСправочника.ИмяСправочника + ".Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДанныеСправочника(Текст)
	Результат = Новый Структура;
	
	ПоложениеРазделителя = Найти(Текст, Разделитель);
	
	ИмяСправочника = Лев(Текст, ПоложениеРазделителя - 1);
	Результат.Вставить("ИмяСправочника", ИмяСправочника);
	
	УИНСтрокой = Сред(Текст, ПоложениеРазделителя + 3);
	Результат.Вставить("УИНСтрокой", УИНСтрокой);

	Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьСсылкуНаСправочник(ДанныеСправочника)
	Результат = Неопределено;
	
	УИН = Новый УникальныйИдентификатор(ДанныеСправочника.УИНСтрокой);
	
	Результат = Справочники[ДанныеСправочника.ИмяСправочника].ПолучитьСсылку(УИН);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Персоны") Тогда
		Объект.Персона = ВыбранноеЗначение;
		
		ОбновитьHTMLПредставление();
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КлючевыеДействия") Тогда
		Объект.КлючевоеДействие = ВыбранноеЗначение;
		
		ОбновитьHTMLПредставление();
		
	КонецЕсли;
КонецПроцедуры

