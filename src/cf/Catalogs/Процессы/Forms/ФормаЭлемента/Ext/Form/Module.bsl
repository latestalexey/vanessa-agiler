
&НаКлиенте
Перем ЭлементыИСлои;

&НаКлиенте
Процедура ОпределитьСлой()
	Для Каждого Пара Из ЭлементыИСлои Цикл
		Если Пара.Ключ = Объект.ЭлементПроцесса Тогда
			Пара.Значение.Видимость = Истина;

		Иначе
			Пара.Значение.Видимость = Ложь;

		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("УстановитьКурсорНаНовыйЭлементПроцесса", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УказатьСоответствиеСлоевИЭлементов();
	ОпределитьСлой();
КонецПроцедуры

&НаКлиенте
Процедура УказатьСоответствиеСлоевИЭлементов()
	ЭлементыИСлои = Новый Соответствие;
	
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.Старт"), Элементы.Слой_Старт);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.Завершение"), Элементы.Слой_Завершение);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.ПользовательскаяИстория"), Элементы.Слой_ПользовательскаяИстория);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.Условие"), Элементы.Слой_Условие);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.ВариантУсловия"), Элементы.Слой_ВариантУсловия);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.ВложенныйПроцесс"), Элементы.Слой_ВложенныйПроцесс);
	ЭлементыИСлои.Вставить(ПредопределенноеЗначение("Перечисление.ЭлементыПроцесса.Комментарий"), Элементы.Слой_Комментарий);
КонецПроцедуры

&НаКлиенте
Процедура ЭлементПроцессаПриИзменении(Элемент)
	ОпределитьСлой();
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьИзПользовательскойИстории(Команда)
	Если Не ЗначениеЗаполнено(Объект.ПользовательскаяИстория) Тогда
		Возврат;		
	КонецЕсли;

	ЗаполнитьИзПользовательскойИсторииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзПользовательскойИсторииНаСервере()
	ОбъектНаСервере = РеквизитФормыВЗначение("Объект");
	
	ЗаполнитьЗначенияСвойств(ОбъектНаСервере, Объект.ПользовательскаяИстория, "Персона,КлючевоеДействие");
	
	ЗначениеВРеквизитФормы(ОбъектНаСервере, "Объект");
КонецПроцедуры


&НаКлиенте
Процедура ПользовательскаяИсторияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОтборФормы = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Персона) Тогда
		ОтборФормы.Вставить("Персона", Объект.Персона);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.КлючевоеДействие) Тогда
		ОтборФормы.Вставить("КлючевоеДействие", Объект.КлючевоеДействие);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.НеобходимаяФункциональность) Тогда
		ОтборФормы.Вставить("НеобходимаяФункциональность", Объект.НеобходимаяФункциональность);
	КонецЕсли;
	
	Если ОтборФормы.Количество() > 0 Тогда
		ПараметрыФормы = Новый Структура;
		
		ПараметрыФормы.Вставить("Отбор", ОтборФормы);
		
		ОткрытьФорму("Справочник.ПользовательскиеИстории.Форма.ФормаВыбора", ПараметрыФормы, Элементы.ПользовательскаяИстория);
		
	Иначе		
		ОткрытьФорму("Справочник.ПользовательскиеИстории.Форма.ФормаВыбора",, Элементы.ПользовательскаяИстория);
		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПользовательскаяИсторияОткрытие(Элемент, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.ПользовательскаяИстория) Тогда
		Возврат;		
	КонецЕсли;

	Если Истина
		И Не ЗначениеЗаполнено(Объект.Персона)
		И Не ЗначениеЗаполнено(Объект.КлючевоеДействие)
		Тогда
		
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияФормы = Новый Структура;
	
	ЗначенияЗаполненияФормы.Вставить("Персона", Объект.Персона);
	ЗначенияЗаполненияФормы.Вставить("КлючевоеДействие", Объект.КлючевоеДействие);
	ЗначенияЗаполненияФормы.Вставить("Владелец", ПолучитьБизнесЦель(Объект.Родитель));
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполненияФормы);
	
	ОткрытьФорму("Справочник.ПользовательскиеИстории.Форма.ФормаЭлемента", ПараметрыФормы, Элементы.ПользовательскаяИстория);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьБизнесЦель(ТекущийЭлемент, Результат = Неопределено)
	Если ТекущийЭлемент.ЭлементПроцесса = Перечисления.ЭлементыПроцесса.Старт Тогда
		Результат = ТекущийЭлемент.БизнесЦель;
		
	Иначе
		ПолучитьБизнесЦель(ТекущийЭлемент.Родитель, Результат);
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура Персона1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//
	//ПараметрыПоиска = Новый Структура("ИсходнаяСтрокаПоиска,ТекущийСправочник", "", Объект.Персона);
	//
	//ОткрытьФорму("ОбщаяФорма.ФормаПоиска", ПараметрыПоиска, Элемент);
КонецПроцедуры

