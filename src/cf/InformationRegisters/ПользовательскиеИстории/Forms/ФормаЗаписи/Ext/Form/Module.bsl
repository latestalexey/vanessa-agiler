
&НаКлиенте
Перем Разделитель;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Запись.КлючевоеДействиеПерсоны.ЭлементПроцесса = Перечисления.ЭлементыПроцесса.ПользовательскаяИстория Тогда
		Отказ =  Истина;
		
		Возврат;
	КонецЕсли;
	
	Параметры.Персона = Запись.КлючевоеДействиеПерсоны.Персона;
	Параметры.КлючевоеДействие = Запись.КлючевоеДействиеПерсоны.КлючевоеДействие;
КонецПроцедуры

&НаКлиенте
Процедура HTMLПредставлениеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если Не ДанныеСобытия.Element.nodeName = "A" Тогда
		Возврат;	
	КонецЕсли;

	ДанныеСправочника = ПолучитьДанныеСправочника(ДанныеСобытия.Element.nameProp);
	Если ДанныеСправочника.Свойство("НавигационнаяСсылка") Тогда
		ПерейтиПоНавигационнойСсылке(ДанныеСправочника.НавигационнаяСсылка);
		
	Иначе
		Если ДанныеСправочника.УИНСтрокой = "00000000-0000-0000-0000-000000000000" Тогда
			ОткрытьФорму("Справочник." + ДанныеСправочника.ИмяСправочника + ".Форма.ФормаВыбора",, ЭтаФорма);
		Иначе
			ПараметрыФормы = Новый Структура;

			ПараметрыФормы.Вставить("ТекущаяСтрока", ПолучитьСсылкуНаСправочник(ДанныеСправочника));
			
			ОткрытьФорму("Справочник." + ДанныеСправочника.ИмяСправочника + ".Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
			
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьHTMLПредставление();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьHTMLПредставление()
	Разделитель = "URL";
	
	ШаблонHTML =
	"<html>
	|<head>
	|  <style>
	|   p {
	|    font-family: 'Courier New'; 
	|    font-size: 12pt;
	|   }
	|  </style>
	| </head>	
	|<body>
	|<p>#Текст</p>
	|</body>                                                      
	|</html>";
	
	Текст = "<a href=""ПерсонаСсылка"">ПерсонаПредставление</a> будет <a href=""КлючевоеДействиеСсылка"">КлючевоеДействиеПредставление</a> и для этого он(она) хочет <a href=""ФункциональностьСсылка"">ФункциональностьПредставление</a>";

	Текст = СтрЗаменить(Текст, "ПерсонаСсылка", ПолучитьНавигационнуюСсылку(Параметры.Персона));
	Текст = СтрЗаменить(Текст, "ПерсонаПредставление", Параметры.Персона);		
	
	Текст = СтрЗаменить(Текст, "КлючевоеДействиеСсылка", ПолучитьНавигационнуюСсылку(Параметры.КлючевоеДействие));
	Текст = СтрЗаменить(Текст, "КлючевоеДействиеПредставление", Параметры.КлючевоеДействие);		
	
	
	Текст = СтрЗаменить(Текст, "ФункциональностьСсылка", "Функциональности" + Разделитель + Запись.Функциональность.УникальныйИдентификатор());		
	Если ЗначениеЗаполнено(Запись.Функциональность) Тогда
		Текст = СтрЗаменить(Текст, "ФункциональностьПредставление", Запись.Функциональность);		
	Иначе
		Текст = СтрЗаменить(Текст, "ФункциональностьПредставление", "функциональность");		
	КонецЕсли;

	Текст = СтрЗаменить(ШаблонHTML, "#Текст", Текст);
	
	HTMLПредставление = Текст;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДанныеСправочника(Текст)
	Результат = Новый Структура;
	
	ПоложениеРазделителя = Найти(Текст, Разделитель);
	Если ПоложениеРазделителя = 0 Тогда
		Результат.Вставить("НавигационнаяСсылка", "e1cib/data/" + Текст);      
		
	Иначе
		ИмяСправочника = Лев(Текст, ПоложениеРазделителя - 1);
		Результат.Вставить("ИмяСправочника", ИмяСправочника);
		
		УИНСтрокой = Сред(Текст, ПоложениеРазделителя + 3);
		Результат.Вставить("УИНСтрокой", УИНСтрокой);
		
	КонецЕсли;

	Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьСсылкуНаСправочник(ДанныеСправочника)
	Результат = Неопределено;
	
	УИН = Новый УникальныйИдентификатор(ДанныеСправочника.УИНСтрокой);
	
	Результат = Справочники[ДанныеСправочника.ИмяСправочника].ПолучитьСсылку(УИН);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Функциональности") Тогда
		Запись.Функциональность = ВыбранноеЗначение;
		
		ОбновитьHTMLПредставление();

	КонецЕсли;
КонецПроцедуры
